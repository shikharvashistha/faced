'on':
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
name: go
jobs:
  build:
    strategy:
      matrix:
        go-version:
          - 1.13.x
          - 1.14.x
          - 1.15.x
          - 1.16.x
        platform:
          - ubuntu-latest
          - macos-latest
          #- windows-latest 
        include:
         - { sys: mingw64, env: x86_64 }
         - { sys: mingw32, env: i686 }
         - { sys: ucrt64,  env: ucrt-x86_64 }
         - { sys: clang64, env: clang-x86_64 }
    runs-on: '${{ matrix.platform }}'
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: '${{ matrix.go-version }}'
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Dependencies Ubuntu
        if: matrix.platform == 'ubuntu-latest'
        run: >-
          sudo apt-get install libdlib-dev libblas-dev libatlas-base-dev
          liblapack-dev libjpeg-turbo8-dev
      - name: Install Dependencies MacOs
        if: matrix.platform == 'macos-latest'
        run: brew install dlib
      - name: Install Dependencies Windows
        if: matrix.platform == 'windows-latest'
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{matrix.sys}}
          update: true
          install: mingw-w64-${{matrix.env}}-toolchain
      - name: MSYS2 packages for Windows
        if: matrix.platform == 'windows-latest'
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{matrix.sys}}
          install: mingw-w64-${{matrix.env}}-dlib mingw-w64-${{matrix.env}}-gcc
      - name: Verification
        working-directory: src/
        run: go mod verify
      - name: Pull Packages
        if: matrix.go-version == '1.16.x'
        working-directory: src/
        run: go get
      - name: Build
        working-directory: src/
        run: go build main.go
      - name: Run
        working-directory: src/
        run: go run main.go
